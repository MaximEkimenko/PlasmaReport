exclude = [".venv", "venv", ".idea", "migration"]  # Исключает указанные директории из проверки.
include = ["*.py"]  # Проверяет только файлы с расширением .py.
respect-gitignore = true  # Учитывает правила .gitignore при выполнении анализа.
show-fixes = true  # Показывает исправления, которые можно применить.
target-version = "py312"  # Устанавливает целевую версию Python 3.12 для анализа.
line-length = 120  # Устанавливает максимальную длину строки в 120 символов.

[lint]
select = [  # Выбирает набор правил для проверки.
   "D",      # Проверка докстрингов.
   "F",      # Проверка на неиспользуемые импорты.
   "N",      # Проверка на соответствие PEP8-наименованиям.
   "C90",    # Специфические проверки.
   "E",      # Ошибки стиля (например, отступы, пробелы).
   "I",      # Проверка импорта (isort).
   "W",      # Предупреждения по стилю.
   "A",      # Проверки аннотаций типов.
   "PLC",    # Проверки по PEP8 naming conventions.
   "UP",     # Правила pyupgrade для обновления синтаксиса Python.
   "S",      # Проверки безопасности (bandit).
   "BLE",    # Проверки flake8-blind-except (необоснованное использование except).
   "B",      # Проверки flake8-bugbear (потенциальные баги).
   "C4",     # Проверки списковых включений и генераторов.
   "DTZ",    # Проверки работы с datetime.
   "EM",     # Проверки сообщений об ошибках.
   "FA",     # Проверки использования future annotations.
   "ISC",    # Проверка неявной конкатенации строк.
   "PIE",    # Проверки flake8-pie (улучшения читаемости).
   "PT",     # Проверки стиля для pytest.
   "SLF",    # Проверки на использование self.
   "SIM",    # Проверки упрощения кода (flake8-simplify).
   "ARG",    # Проверки на неиспользуемые аргументы функций.
   "TRY",    # Проверки для try-catch блоков (tryceratops).
   "ANN",    # Проверки аннотаций типов.
   "ASYNC",  # Проверки async функций.
   "FBT",    # Проверки flake8-builtins.
   "COM",    # Проверки комментариев.
   "DJ",     # Проверки Django.
   "ICN",    # Проверки именования импортов.
   "T20",    # Проверки тестов.
   "Q",      # Проверки использования кавычек.
   "RSE",    # Проверки использования ресурсов.
   "RET",    # Проверки возвратов функций.
   "SLOT",   # Проверки использования __slots__.
   "TID",    # Проверки идентификаторов.
   "PTH",    # Проверки работы с путями.
   "PLE",    # Проверки выражений (e.g., length checks).
   "PLR",    # Проверки линейности.
   "PLW",    # Проверки использования переменных.
   "FAST",   # FastAPI
   "PERF",   # Проверки производительности.
   "FURB",   # Проверки работы с функциями.
   "RUF",    # Специфические проверки Ruff.
   "TC",     # проверка использования TYPE_CHECKING
]

ignore = [
    "B008",  # Исключает правило о неявном изменении аргументов функций.
    "C901",  # Исключает правило о слишком сложных функциях.
    "D213",  # В многострочном докстринге основное резюме (summary) начиналось со второй строки, а не на первой.
    "D203",  # Перед докстрингом класса была ровно одна пустая строка
   "RUF003", # многозначительные кирилические символы
   "RUF002", # многозначительные кирилические символы
   "RUF001", # многозначительные кирилические символы
   "D104",   # docstring в __init__
   "D400",   # точка в первой строке docstring
   "BLE001",  # запрет обработки исключения Exception
   "RET503",  # явный вызов return
   # TODO FastAPI seprcials
   "N805",     # First argument of a method should be named `self`
   "TRY301",
   "RUF015",
   "S101"
]

[lint.flake8-quotes]
docstring-quotes = "double"  # Устанавливает двойные кавычки для докстрингов.
inline-quotes = "double"  # Устанавливает двойные кавычки для строк.
multiline-quotes = "double"  # Устанавливает двойные кавычки для многострочных строк.

[lint.flake8-annotations]

[lint.flake8-bandit]
check-typed-exception = true  # Проверяет типизированные исключения.

[lint.flake8-comprehensions]

[lint.flake8-import-conventions.aliases]
altair = "alt"  # Устанавливает псевдоним для библиотеки altair.
"matplotlib.pyplot" = "plt"  # Устанавливает псевдоним для matplotlib.pyplot.
numpy = "np"  # Устанавливает псевдоним для numpy.
pandas = "pd"  # Устанавливает псевдоним для pandas.
seaborn = "sns"  # Устанавливает псевдоним для seaborn.
scipy = "sp"  # Устанавливает псевдоним для scipy.

[lint.flake8-import-conventions.banned-aliases]
openpyxl = ["op", ]  # Запрещает использование указанного псевдонима для openpyxl.

[lint.flake8-import-conventions]
banned-from = []  # Запрещает импортировать из модуля typing.

[lint.flake8-type-checking]
strict = true  # Включает строгий режим для проверок типов.

[lint.isort]
from-first = false  # Не сортирует сначала импорты "from ...".
length-sort = true  # Сортирует импорты по длине.
length-sort-straight = true  # Сортирует прямые импорты по длине.
lines-between-types = 1  # Добавляет одну пустую строку между импортами разных типов.

[lint.pylint]
max-args = 10  # максимальное колчиество аргументов

[lint.pydocstyle]
ignore-var-parameters = true